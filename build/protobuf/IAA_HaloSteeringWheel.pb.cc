// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IAA_HaloSteeringWheel.proto

#include "IAA_HaloSteeringWheel.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace IAA {
namespace Halo {
namespace SteeringWheel {
class Clear_StripDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Clear_Strip>
      _instance;
} _Clear_Strip_default_instance_;
class SetColor_StripDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetColor_Strip>
      _instance;
} _SetColor_Strip_default_instance_;
class SetLength_StripDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetLength_Strip>
      _instance;
} _SetLength_Strip_default_instance_;
class Cmd_FadeInDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Cmd_FadeIn>
      _instance;
} _Cmd_FadeIn_default_instance_;
class Cmd_FadeOutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Cmd_FadeOut>
      _instance;
} _Cmd_FadeOut_default_instance_;
class HALO_SteeringWheel_StatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HALO_SteeringWheel_Status>
      _instance;
} _HALO_SteeringWheel_Status_default_instance_;
class HALO_SteeringWheelCommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HALO_SteeringWheelCommand>
      _instance;
} _HALO_SteeringWheelCommand_default_instance_;
}  // namespace SteeringWheel
}  // namespace Halo
}  // namespace IAA
namespace protobuf_IAA_5fHaloSteeringWheel_2eproto {
void InitDefaultsClear_StripImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IAA::Halo::SteeringWheel::_Clear_Strip_default_instance_;
    new (ptr) ::IAA::Halo::SteeringWheel::Clear_Strip();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IAA::Halo::SteeringWheel::Clear_Strip::InitAsDefaultInstance();
}

void InitDefaultsClear_Strip() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClear_StripImpl);
}

void InitDefaultsSetColor_StripImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IAA::Halo::SteeringWheel::_SetColor_Strip_default_instance_;
    new (ptr) ::IAA::Halo::SteeringWheel::SetColor_Strip();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IAA::Halo::SteeringWheel::SetColor_Strip::InitAsDefaultInstance();
}

void InitDefaultsSetColor_Strip() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetColor_StripImpl);
}

void InitDefaultsSetLength_StripImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IAA::Halo::SteeringWheel::_SetLength_Strip_default_instance_;
    new (ptr) ::IAA::Halo::SteeringWheel::SetLength_Strip();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IAA::Halo::SteeringWheel::SetLength_Strip::InitAsDefaultInstance();
}

void InitDefaultsSetLength_Strip() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetLength_StripImpl);
}

void InitDefaultsCmd_FadeInImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IAA::Halo::SteeringWheel::_Cmd_FadeIn_default_instance_;
    new (ptr) ::IAA::Halo::SteeringWheel::Cmd_FadeIn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IAA::Halo::SteeringWheel::Cmd_FadeIn::InitAsDefaultInstance();
}

void InitDefaultsCmd_FadeIn() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCmd_FadeInImpl);
}

void InitDefaultsCmd_FadeOutImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IAA::Halo::SteeringWheel::_Cmd_FadeOut_default_instance_;
    new (ptr) ::IAA::Halo::SteeringWheel::Cmd_FadeOut();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IAA::Halo::SteeringWheel::Cmd_FadeOut::InitAsDefaultInstance();
}

void InitDefaultsCmd_FadeOut() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCmd_FadeOutImpl);
}

void InitDefaultsHALO_SteeringWheel_StatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IAA::Halo::SteeringWheel::_HALO_SteeringWheel_Status_default_instance_;
    new (ptr) ::IAA::Halo::SteeringWheel::HALO_SteeringWheel_Status();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IAA::Halo::SteeringWheel::HALO_SteeringWheel_Status::InitAsDefaultInstance();
}

void InitDefaultsHALO_SteeringWheel_Status() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHALO_SteeringWheel_StatusImpl);
}

void InitDefaultsHALO_SteeringWheelCommandImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IAA::Halo::SteeringWheel::_HALO_SteeringWheelCommand_default_instance_;
    new (ptr) ::IAA::Halo::SteeringWheel::HALO_SteeringWheelCommand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IAA::Halo::SteeringWheel::HALO_SteeringWheelCommand::InitAsDefaultInstance();
}

void InitDefaultsHALO_SteeringWheelCommand() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHALO_SteeringWheelCommandImpl);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::Clear_Strip, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::Clear_Strip, clr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::SetColor_Strip, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::SetColor_Strip, red_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::SetColor_Strip, green_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::SetColor_Strip, blue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::SetColor_Strip, globalbrightness_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::SetLength_Strip, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::SetLength_Strip, lenght_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::Cmd_FadeIn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::Cmd_FadeIn, red_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::Cmd_FadeIn, green_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::Cmd_FadeIn, blue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::Cmd_FadeIn, brightness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::Cmd_FadeIn, delay_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::Cmd_FadeOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::Cmd_FadeOut, red_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::Cmd_FadeOut, green_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::Cmd_FadeOut, blue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::Cmd_FadeOut, delay_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::HALO_SteeringWheel_Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::HALO_SteeringWheel_Status, alive_counter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::HALO_SteeringWheelCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IAA::Halo::SteeringWheel::HALO_SteeringWheelCommand, command_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::IAA::Halo::SteeringWheel::Clear_Strip)},
  { 6, -1, sizeof(::IAA::Halo::SteeringWheel::SetColor_Strip)},
  { 15, -1, sizeof(::IAA::Halo::SteeringWheel::SetLength_Strip)},
  { 21, -1, sizeof(::IAA::Halo::SteeringWheel::Cmd_FadeIn)},
  { 31, -1, sizeof(::IAA::Halo::SteeringWheel::Cmd_FadeOut)},
  { 40, -1, sizeof(::IAA::Halo::SteeringWheel::HALO_SteeringWheel_Status)},
  { 46, -1, sizeof(::IAA::Halo::SteeringWheel::HALO_SteeringWheelCommand)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::IAA::Halo::SteeringWheel::_Clear_Strip_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IAA::Halo::SteeringWheel::_SetColor_Strip_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IAA::Halo::SteeringWheel::_SetLength_Strip_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IAA::Halo::SteeringWheel::_Cmd_FadeIn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IAA::Halo::SteeringWheel::_Cmd_FadeOut_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IAA::Halo::SteeringWheel::_HALO_SteeringWheel_Status_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IAA::Halo::SteeringWheel::_HALO_SteeringWheelCommand_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "IAA_HaloSteeringWheel.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033IAA_HaloSteeringWheel.proto\022\026IAA.Halo."
      "SteeringWheel\"\032\n\013Clear_Strip\022\013\n\003clr\030\001 \001("
      "\010\"T\n\016SetColor_Strip\022\013\n\003red\030\001 \001(\r\022\r\n\005gree"
      "n\030\002 \001(\r\022\014\n\004blue\030\003 \001(\r\022\030\n\020globalbrightnes"
      "s\030\004 \001(\r\"!\n\017SetLength_Strip\022\016\n\006lenght\030\001 \001"
      "(\r\"Y\n\nCmd_FadeIn\022\013\n\003red\030\001 \001(\r\022\r\n\005green\030\002"
      " \001(\r\022\014\n\004blue\030\003 \001(\r\022\022\n\nbrightness\030\004 \001(\r\022\r"
      "\n\005delay\030\005 \001(\r\"F\n\013Cmd_FadeOut\022\013\n\003red\030\001 \001("
      "\r\022\r\n\005green\030\002 \001(\r\022\014\n\004blue\030\003 \001(\r\022\r\n\005delay\030"
      "\004 \001(\r\"2\n\031HALO_SteeringWheel_Status\022\025\n\ral"
      "ive_counter\030\001 \001(\r\"\255\001\n\031HALO_SteeringWheel"
      "Command\022N\n\007command\030\001 \001(\0162=.IAA.Halo.Stee"
      "ringWheel.HALO_SteeringWheelCommand.Comm"
      "andList\"@\n\013CommandList\022\010\n\004NONE\020\000\022\013\n\007FADE"
      "_IN\020\001\022\014\n\010FADE_OUT\020\002\022\014\n\010IDLE_OFF\020\003b\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 601);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "IAA_HaloSteeringWheel.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_IAA_5fHaloSteeringWheel_2eproto
namespace IAA {
namespace Halo {
namespace SteeringWheel {
const ::google::protobuf::EnumDescriptor* HALO_SteeringWheelCommand_CommandList_descriptor() {
  protobuf_IAA_5fHaloSteeringWheel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IAA_5fHaloSteeringWheel_2eproto::file_level_enum_descriptors[0];
}
bool HALO_SteeringWheelCommand_CommandList_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const HALO_SteeringWheelCommand_CommandList HALO_SteeringWheelCommand::NONE;
const HALO_SteeringWheelCommand_CommandList HALO_SteeringWheelCommand::FADE_IN;
const HALO_SteeringWheelCommand_CommandList HALO_SteeringWheelCommand::FADE_OUT;
const HALO_SteeringWheelCommand_CommandList HALO_SteeringWheelCommand::IDLE_OFF;
const HALO_SteeringWheelCommand_CommandList HALO_SteeringWheelCommand::CommandList_MIN;
const HALO_SteeringWheelCommand_CommandList HALO_SteeringWheelCommand::CommandList_MAX;
const int HALO_SteeringWheelCommand::CommandList_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Clear_Strip::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Clear_Strip::kClrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Clear_Strip::Clear_Strip()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsClear_Strip();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IAA.Halo.SteeringWheel.Clear_Strip)
}
Clear_Strip::Clear_Strip(const Clear_Strip& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clr_ = from.clr_;
  // @@protoc_insertion_point(copy_constructor:IAA.Halo.SteeringWheel.Clear_Strip)
}

void Clear_Strip::SharedCtor() {
  clr_ = false;
  _cached_size_ = 0;
}

Clear_Strip::~Clear_Strip() {
  // @@protoc_insertion_point(destructor:IAA.Halo.SteeringWheel.Clear_Strip)
  SharedDtor();
}

void Clear_Strip::SharedDtor() {
}

void Clear_Strip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Clear_Strip::descriptor() {
  ::protobuf_IAA_5fHaloSteeringWheel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IAA_5fHaloSteeringWheel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Clear_Strip& Clear_Strip::default_instance() {
  ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsClear_Strip();
  return *internal_default_instance();
}

Clear_Strip* Clear_Strip::New(::google::protobuf::Arena* arena) const {
  Clear_Strip* n = new Clear_Strip;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Clear_Strip::Clear() {
// @@protoc_insertion_point(message_clear_start:IAA.Halo.SteeringWheel.Clear_Strip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clr_ = false;
  _internal_metadata_.Clear();
}

bool Clear_Strip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IAA.Halo.SteeringWheel.Clear_Strip)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool clr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IAA.Halo.SteeringWheel.Clear_Strip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IAA.Halo.SteeringWheel.Clear_Strip)
  return false;
#undef DO_
}

void Clear_Strip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IAA.Halo.SteeringWheel.Clear_Strip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool clr = 1;
  if (this->clr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->clr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IAA.Halo.SteeringWheel.Clear_Strip)
}

::google::protobuf::uint8* Clear_Strip::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IAA.Halo.SteeringWheel.Clear_Strip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool clr = 1;
  if (this->clr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->clr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IAA.Halo.SteeringWheel.Clear_Strip)
  return target;
}

size_t Clear_Strip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IAA.Halo.SteeringWheel.Clear_Strip)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool clr = 1;
  if (this->clr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Clear_Strip::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IAA.Halo.SteeringWheel.Clear_Strip)
  GOOGLE_DCHECK_NE(&from, this);
  const Clear_Strip* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Clear_Strip>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IAA.Halo.SteeringWheel.Clear_Strip)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IAA.Halo.SteeringWheel.Clear_Strip)
    MergeFrom(*source);
  }
}

void Clear_Strip::MergeFrom(const Clear_Strip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IAA.Halo.SteeringWheel.Clear_Strip)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clr() != 0) {
    set_clr(from.clr());
  }
}

void Clear_Strip::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IAA.Halo.SteeringWheel.Clear_Strip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Clear_Strip::CopyFrom(const Clear_Strip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IAA.Halo.SteeringWheel.Clear_Strip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Clear_Strip::IsInitialized() const {
  return true;
}

void Clear_Strip::Swap(Clear_Strip* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Clear_Strip::InternalSwap(Clear_Strip* other) {
  using std::swap;
  swap(clr_, other->clr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Clear_Strip::GetMetadata() const {
  protobuf_IAA_5fHaloSteeringWheel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IAA_5fHaloSteeringWheel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetColor_Strip::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetColor_Strip::kRedFieldNumber;
const int SetColor_Strip::kGreenFieldNumber;
const int SetColor_Strip::kBlueFieldNumber;
const int SetColor_Strip::kGlobalbrightnessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetColor_Strip::SetColor_Strip()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsSetColor_Strip();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IAA.Halo.SteeringWheel.SetColor_Strip)
}
SetColor_Strip::SetColor_Strip(const SetColor_Strip& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&red_, &from.red_,
    static_cast<size_t>(reinterpret_cast<char*>(&globalbrightness_) -
    reinterpret_cast<char*>(&red_)) + sizeof(globalbrightness_));
  // @@protoc_insertion_point(copy_constructor:IAA.Halo.SteeringWheel.SetColor_Strip)
}

void SetColor_Strip::SharedCtor() {
  ::memset(&red_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&globalbrightness_) -
      reinterpret_cast<char*>(&red_)) + sizeof(globalbrightness_));
  _cached_size_ = 0;
}

SetColor_Strip::~SetColor_Strip() {
  // @@protoc_insertion_point(destructor:IAA.Halo.SteeringWheel.SetColor_Strip)
  SharedDtor();
}

void SetColor_Strip::SharedDtor() {
}

void SetColor_Strip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetColor_Strip::descriptor() {
  ::protobuf_IAA_5fHaloSteeringWheel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IAA_5fHaloSteeringWheel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetColor_Strip& SetColor_Strip::default_instance() {
  ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsSetColor_Strip();
  return *internal_default_instance();
}

SetColor_Strip* SetColor_Strip::New(::google::protobuf::Arena* arena) const {
  SetColor_Strip* n = new SetColor_Strip;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetColor_Strip::Clear() {
// @@protoc_insertion_point(message_clear_start:IAA.Halo.SteeringWheel.SetColor_Strip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&red_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&globalbrightness_) -
      reinterpret_cast<char*>(&red_)) + sizeof(globalbrightness_));
  _internal_metadata_.Clear();
}

bool SetColor_Strip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IAA.Halo.SteeringWheel.SetColor_Strip)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 red = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &red_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 green = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &green_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 blue = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &blue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 globalbrightness = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &globalbrightness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IAA.Halo.SteeringWheel.SetColor_Strip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IAA.Halo.SteeringWheel.SetColor_Strip)
  return false;
#undef DO_
}

void SetColor_Strip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IAA.Halo.SteeringWheel.SetColor_Strip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 red = 1;
  if (this->red() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->red(), output);
  }

  // uint32 green = 2;
  if (this->green() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->green(), output);
  }

  // uint32 blue = 3;
  if (this->blue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->blue(), output);
  }

  // uint32 globalbrightness = 4;
  if (this->globalbrightness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->globalbrightness(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IAA.Halo.SteeringWheel.SetColor_Strip)
}

::google::protobuf::uint8* SetColor_Strip::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IAA.Halo.SteeringWheel.SetColor_Strip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 red = 1;
  if (this->red() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->red(), target);
  }

  // uint32 green = 2;
  if (this->green() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->green(), target);
  }

  // uint32 blue = 3;
  if (this->blue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->blue(), target);
  }

  // uint32 globalbrightness = 4;
  if (this->globalbrightness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->globalbrightness(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IAA.Halo.SteeringWheel.SetColor_Strip)
  return target;
}

size_t SetColor_Strip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IAA.Halo.SteeringWheel.SetColor_Strip)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 red = 1;
  if (this->red() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->red());
  }

  // uint32 green = 2;
  if (this->green() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->green());
  }

  // uint32 blue = 3;
  if (this->blue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->blue());
  }

  // uint32 globalbrightness = 4;
  if (this->globalbrightness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->globalbrightness());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetColor_Strip::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IAA.Halo.SteeringWheel.SetColor_Strip)
  GOOGLE_DCHECK_NE(&from, this);
  const SetColor_Strip* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetColor_Strip>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IAA.Halo.SteeringWheel.SetColor_Strip)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IAA.Halo.SteeringWheel.SetColor_Strip)
    MergeFrom(*source);
  }
}

void SetColor_Strip::MergeFrom(const SetColor_Strip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IAA.Halo.SteeringWheel.SetColor_Strip)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.red() != 0) {
    set_red(from.red());
  }
  if (from.green() != 0) {
    set_green(from.green());
  }
  if (from.blue() != 0) {
    set_blue(from.blue());
  }
  if (from.globalbrightness() != 0) {
    set_globalbrightness(from.globalbrightness());
  }
}

void SetColor_Strip::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IAA.Halo.SteeringWheel.SetColor_Strip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetColor_Strip::CopyFrom(const SetColor_Strip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IAA.Halo.SteeringWheel.SetColor_Strip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetColor_Strip::IsInitialized() const {
  return true;
}

void SetColor_Strip::Swap(SetColor_Strip* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetColor_Strip::InternalSwap(SetColor_Strip* other) {
  using std::swap;
  swap(red_, other->red_);
  swap(green_, other->green_);
  swap(blue_, other->blue_);
  swap(globalbrightness_, other->globalbrightness_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetColor_Strip::GetMetadata() const {
  protobuf_IAA_5fHaloSteeringWheel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IAA_5fHaloSteeringWheel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetLength_Strip::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetLength_Strip::kLenghtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetLength_Strip::SetLength_Strip()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsSetLength_Strip();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IAA.Halo.SteeringWheel.SetLength_Strip)
}
SetLength_Strip::SetLength_Strip(const SetLength_Strip& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lenght_ = from.lenght_;
  // @@protoc_insertion_point(copy_constructor:IAA.Halo.SteeringWheel.SetLength_Strip)
}

void SetLength_Strip::SharedCtor() {
  lenght_ = 0u;
  _cached_size_ = 0;
}

SetLength_Strip::~SetLength_Strip() {
  // @@protoc_insertion_point(destructor:IAA.Halo.SteeringWheel.SetLength_Strip)
  SharedDtor();
}

void SetLength_Strip::SharedDtor() {
}

void SetLength_Strip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetLength_Strip::descriptor() {
  ::protobuf_IAA_5fHaloSteeringWheel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IAA_5fHaloSteeringWheel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetLength_Strip& SetLength_Strip::default_instance() {
  ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsSetLength_Strip();
  return *internal_default_instance();
}

SetLength_Strip* SetLength_Strip::New(::google::protobuf::Arena* arena) const {
  SetLength_Strip* n = new SetLength_Strip;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetLength_Strip::Clear() {
// @@protoc_insertion_point(message_clear_start:IAA.Halo.SteeringWheel.SetLength_Strip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lenght_ = 0u;
  _internal_metadata_.Clear();
}

bool SetLength_Strip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IAA.Halo.SteeringWheel.SetLength_Strip)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 lenght = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lenght_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IAA.Halo.SteeringWheel.SetLength_Strip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IAA.Halo.SteeringWheel.SetLength_Strip)
  return false;
#undef DO_
}

void SetLength_Strip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IAA.Halo.SteeringWheel.SetLength_Strip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 lenght = 1;
  if (this->lenght() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->lenght(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IAA.Halo.SteeringWheel.SetLength_Strip)
}

::google::protobuf::uint8* SetLength_Strip::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IAA.Halo.SteeringWheel.SetLength_Strip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 lenght = 1;
  if (this->lenght() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->lenght(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IAA.Halo.SteeringWheel.SetLength_Strip)
  return target;
}

size_t SetLength_Strip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IAA.Halo.SteeringWheel.SetLength_Strip)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 lenght = 1;
  if (this->lenght() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lenght());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetLength_Strip::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IAA.Halo.SteeringWheel.SetLength_Strip)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLength_Strip* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetLength_Strip>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IAA.Halo.SteeringWheel.SetLength_Strip)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IAA.Halo.SteeringWheel.SetLength_Strip)
    MergeFrom(*source);
  }
}

void SetLength_Strip::MergeFrom(const SetLength_Strip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IAA.Halo.SteeringWheel.SetLength_Strip)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lenght() != 0) {
    set_lenght(from.lenght());
  }
}

void SetLength_Strip::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IAA.Halo.SteeringWheel.SetLength_Strip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLength_Strip::CopyFrom(const SetLength_Strip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IAA.Halo.SteeringWheel.SetLength_Strip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLength_Strip::IsInitialized() const {
  return true;
}

void SetLength_Strip::Swap(SetLength_Strip* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetLength_Strip::InternalSwap(SetLength_Strip* other) {
  using std::swap;
  swap(lenght_, other->lenght_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetLength_Strip::GetMetadata() const {
  protobuf_IAA_5fHaloSteeringWheel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IAA_5fHaloSteeringWheel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Cmd_FadeIn::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cmd_FadeIn::kRedFieldNumber;
const int Cmd_FadeIn::kGreenFieldNumber;
const int Cmd_FadeIn::kBlueFieldNumber;
const int Cmd_FadeIn::kBrightnessFieldNumber;
const int Cmd_FadeIn::kDelayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cmd_FadeIn::Cmd_FadeIn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsCmd_FadeIn();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IAA.Halo.SteeringWheel.Cmd_FadeIn)
}
Cmd_FadeIn::Cmd_FadeIn(const Cmd_FadeIn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&red_, &from.red_,
    static_cast<size_t>(reinterpret_cast<char*>(&delay_) -
    reinterpret_cast<char*>(&red_)) + sizeof(delay_));
  // @@protoc_insertion_point(copy_constructor:IAA.Halo.SteeringWheel.Cmd_FadeIn)
}

void Cmd_FadeIn::SharedCtor() {
  ::memset(&red_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delay_) -
      reinterpret_cast<char*>(&red_)) + sizeof(delay_));
  _cached_size_ = 0;
}

Cmd_FadeIn::~Cmd_FadeIn() {
  // @@protoc_insertion_point(destructor:IAA.Halo.SteeringWheel.Cmd_FadeIn)
  SharedDtor();
}

void Cmd_FadeIn::SharedDtor() {
}

void Cmd_FadeIn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cmd_FadeIn::descriptor() {
  ::protobuf_IAA_5fHaloSteeringWheel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IAA_5fHaloSteeringWheel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Cmd_FadeIn& Cmd_FadeIn::default_instance() {
  ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsCmd_FadeIn();
  return *internal_default_instance();
}

Cmd_FadeIn* Cmd_FadeIn::New(::google::protobuf::Arena* arena) const {
  Cmd_FadeIn* n = new Cmd_FadeIn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cmd_FadeIn::Clear() {
// @@protoc_insertion_point(message_clear_start:IAA.Halo.SteeringWheel.Cmd_FadeIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&red_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delay_) -
      reinterpret_cast<char*>(&red_)) + sizeof(delay_));
  _internal_metadata_.Clear();
}

bool Cmd_FadeIn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IAA.Halo.SteeringWheel.Cmd_FadeIn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 red = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &red_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 green = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &green_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 blue = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &blue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 brightness = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &brightness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 delay = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &delay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IAA.Halo.SteeringWheel.Cmd_FadeIn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IAA.Halo.SteeringWheel.Cmd_FadeIn)
  return false;
#undef DO_
}

void Cmd_FadeIn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IAA.Halo.SteeringWheel.Cmd_FadeIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 red = 1;
  if (this->red() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->red(), output);
  }

  // uint32 green = 2;
  if (this->green() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->green(), output);
  }

  // uint32 blue = 3;
  if (this->blue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->blue(), output);
  }

  // uint32 brightness = 4;
  if (this->brightness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->brightness(), output);
  }

  // uint32 delay = 5;
  if (this->delay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->delay(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IAA.Halo.SteeringWheel.Cmd_FadeIn)
}

::google::protobuf::uint8* Cmd_FadeIn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IAA.Halo.SteeringWheel.Cmd_FadeIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 red = 1;
  if (this->red() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->red(), target);
  }

  // uint32 green = 2;
  if (this->green() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->green(), target);
  }

  // uint32 blue = 3;
  if (this->blue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->blue(), target);
  }

  // uint32 brightness = 4;
  if (this->brightness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->brightness(), target);
  }

  // uint32 delay = 5;
  if (this->delay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->delay(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IAA.Halo.SteeringWheel.Cmd_FadeIn)
  return target;
}

size_t Cmd_FadeIn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IAA.Halo.SteeringWheel.Cmd_FadeIn)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 red = 1;
  if (this->red() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->red());
  }

  // uint32 green = 2;
  if (this->green() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->green());
  }

  // uint32 blue = 3;
  if (this->blue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->blue());
  }

  // uint32 brightness = 4;
  if (this->brightness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->brightness());
  }

  // uint32 delay = 5;
  if (this->delay() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delay());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Cmd_FadeIn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IAA.Halo.SteeringWheel.Cmd_FadeIn)
  GOOGLE_DCHECK_NE(&from, this);
  const Cmd_FadeIn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Cmd_FadeIn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IAA.Halo.SteeringWheel.Cmd_FadeIn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IAA.Halo.SteeringWheel.Cmd_FadeIn)
    MergeFrom(*source);
  }
}

void Cmd_FadeIn::MergeFrom(const Cmd_FadeIn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IAA.Halo.SteeringWheel.Cmd_FadeIn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.red() != 0) {
    set_red(from.red());
  }
  if (from.green() != 0) {
    set_green(from.green());
  }
  if (from.blue() != 0) {
    set_blue(from.blue());
  }
  if (from.brightness() != 0) {
    set_brightness(from.brightness());
  }
  if (from.delay() != 0) {
    set_delay(from.delay());
  }
}

void Cmd_FadeIn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IAA.Halo.SteeringWheel.Cmd_FadeIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cmd_FadeIn::CopyFrom(const Cmd_FadeIn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IAA.Halo.SteeringWheel.Cmd_FadeIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cmd_FadeIn::IsInitialized() const {
  return true;
}

void Cmd_FadeIn::Swap(Cmd_FadeIn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cmd_FadeIn::InternalSwap(Cmd_FadeIn* other) {
  using std::swap;
  swap(red_, other->red_);
  swap(green_, other->green_);
  swap(blue_, other->blue_);
  swap(brightness_, other->brightness_);
  swap(delay_, other->delay_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Cmd_FadeIn::GetMetadata() const {
  protobuf_IAA_5fHaloSteeringWheel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IAA_5fHaloSteeringWheel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Cmd_FadeOut::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cmd_FadeOut::kRedFieldNumber;
const int Cmd_FadeOut::kGreenFieldNumber;
const int Cmd_FadeOut::kBlueFieldNumber;
const int Cmd_FadeOut::kDelayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cmd_FadeOut::Cmd_FadeOut()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsCmd_FadeOut();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IAA.Halo.SteeringWheel.Cmd_FadeOut)
}
Cmd_FadeOut::Cmd_FadeOut(const Cmd_FadeOut& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&red_, &from.red_,
    static_cast<size_t>(reinterpret_cast<char*>(&delay_) -
    reinterpret_cast<char*>(&red_)) + sizeof(delay_));
  // @@protoc_insertion_point(copy_constructor:IAA.Halo.SteeringWheel.Cmd_FadeOut)
}

void Cmd_FadeOut::SharedCtor() {
  ::memset(&red_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delay_) -
      reinterpret_cast<char*>(&red_)) + sizeof(delay_));
  _cached_size_ = 0;
}

Cmd_FadeOut::~Cmd_FadeOut() {
  // @@protoc_insertion_point(destructor:IAA.Halo.SteeringWheel.Cmd_FadeOut)
  SharedDtor();
}

void Cmd_FadeOut::SharedDtor() {
}

void Cmd_FadeOut::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cmd_FadeOut::descriptor() {
  ::protobuf_IAA_5fHaloSteeringWheel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IAA_5fHaloSteeringWheel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Cmd_FadeOut& Cmd_FadeOut::default_instance() {
  ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsCmd_FadeOut();
  return *internal_default_instance();
}

Cmd_FadeOut* Cmd_FadeOut::New(::google::protobuf::Arena* arena) const {
  Cmd_FadeOut* n = new Cmd_FadeOut;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cmd_FadeOut::Clear() {
// @@protoc_insertion_point(message_clear_start:IAA.Halo.SteeringWheel.Cmd_FadeOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&red_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delay_) -
      reinterpret_cast<char*>(&red_)) + sizeof(delay_));
  _internal_metadata_.Clear();
}

bool Cmd_FadeOut::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IAA.Halo.SteeringWheel.Cmd_FadeOut)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 red = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &red_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 green = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &green_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 blue = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &blue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 delay = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &delay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IAA.Halo.SteeringWheel.Cmd_FadeOut)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IAA.Halo.SteeringWheel.Cmd_FadeOut)
  return false;
#undef DO_
}

void Cmd_FadeOut::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IAA.Halo.SteeringWheel.Cmd_FadeOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 red = 1;
  if (this->red() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->red(), output);
  }

  // uint32 green = 2;
  if (this->green() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->green(), output);
  }

  // uint32 blue = 3;
  if (this->blue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->blue(), output);
  }

  // uint32 delay = 4;
  if (this->delay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->delay(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IAA.Halo.SteeringWheel.Cmd_FadeOut)
}

::google::protobuf::uint8* Cmd_FadeOut::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IAA.Halo.SteeringWheel.Cmd_FadeOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 red = 1;
  if (this->red() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->red(), target);
  }

  // uint32 green = 2;
  if (this->green() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->green(), target);
  }

  // uint32 blue = 3;
  if (this->blue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->blue(), target);
  }

  // uint32 delay = 4;
  if (this->delay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->delay(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IAA.Halo.SteeringWheel.Cmd_FadeOut)
  return target;
}

size_t Cmd_FadeOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IAA.Halo.SteeringWheel.Cmd_FadeOut)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 red = 1;
  if (this->red() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->red());
  }

  // uint32 green = 2;
  if (this->green() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->green());
  }

  // uint32 blue = 3;
  if (this->blue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->blue());
  }

  // uint32 delay = 4;
  if (this->delay() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delay());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Cmd_FadeOut::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IAA.Halo.SteeringWheel.Cmd_FadeOut)
  GOOGLE_DCHECK_NE(&from, this);
  const Cmd_FadeOut* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Cmd_FadeOut>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IAA.Halo.SteeringWheel.Cmd_FadeOut)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IAA.Halo.SteeringWheel.Cmd_FadeOut)
    MergeFrom(*source);
  }
}

void Cmd_FadeOut::MergeFrom(const Cmd_FadeOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IAA.Halo.SteeringWheel.Cmd_FadeOut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.red() != 0) {
    set_red(from.red());
  }
  if (from.green() != 0) {
    set_green(from.green());
  }
  if (from.blue() != 0) {
    set_blue(from.blue());
  }
  if (from.delay() != 0) {
    set_delay(from.delay());
  }
}

void Cmd_FadeOut::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IAA.Halo.SteeringWheel.Cmd_FadeOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cmd_FadeOut::CopyFrom(const Cmd_FadeOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IAA.Halo.SteeringWheel.Cmd_FadeOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cmd_FadeOut::IsInitialized() const {
  return true;
}

void Cmd_FadeOut::Swap(Cmd_FadeOut* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cmd_FadeOut::InternalSwap(Cmd_FadeOut* other) {
  using std::swap;
  swap(red_, other->red_);
  swap(green_, other->green_);
  swap(blue_, other->blue_);
  swap(delay_, other->delay_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Cmd_FadeOut::GetMetadata() const {
  protobuf_IAA_5fHaloSteeringWheel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IAA_5fHaloSteeringWheel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HALO_SteeringWheel_Status::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HALO_SteeringWheel_Status::kAliveCounterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HALO_SteeringWheel_Status::HALO_SteeringWheel_Status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsHALO_SteeringWheel_Status();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status)
}
HALO_SteeringWheel_Status::HALO_SteeringWheel_Status(const HALO_SteeringWheel_Status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  alive_counter_ = from.alive_counter_;
  // @@protoc_insertion_point(copy_constructor:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status)
}

void HALO_SteeringWheel_Status::SharedCtor() {
  alive_counter_ = 0u;
  _cached_size_ = 0;
}

HALO_SteeringWheel_Status::~HALO_SteeringWheel_Status() {
  // @@protoc_insertion_point(destructor:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status)
  SharedDtor();
}

void HALO_SteeringWheel_Status::SharedDtor() {
}

void HALO_SteeringWheel_Status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HALO_SteeringWheel_Status::descriptor() {
  ::protobuf_IAA_5fHaloSteeringWheel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IAA_5fHaloSteeringWheel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HALO_SteeringWheel_Status& HALO_SteeringWheel_Status::default_instance() {
  ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsHALO_SteeringWheel_Status();
  return *internal_default_instance();
}

HALO_SteeringWheel_Status* HALO_SteeringWheel_Status::New(::google::protobuf::Arena* arena) const {
  HALO_SteeringWheel_Status* n = new HALO_SteeringWheel_Status;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HALO_SteeringWheel_Status::Clear() {
// @@protoc_insertion_point(message_clear_start:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alive_counter_ = 0u;
  _internal_metadata_.Clear();
}

bool HALO_SteeringWheel_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 alive_counter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &alive_counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status)
  return false;
#undef DO_
}

void HALO_SteeringWheel_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 alive_counter = 1;
  if (this->alive_counter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->alive_counter(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status)
}

::google::protobuf::uint8* HALO_SteeringWheel_Status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 alive_counter = 1;
  if (this->alive_counter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->alive_counter(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status)
  return target;
}

size_t HALO_SteeringWheel_Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 alive_counter = 1;
  if (this->alive_counter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->alive_counter());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HALO_SteeringWheel_Status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status)
  GOOGLE_DCHECK_NE(&from, this);
  const HALO_SteeringWheel_Status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HALO_SteeringWheel_Status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status)
    MergeFrom(*source);
  }
}

void HALO_SteeringWheel_Status::MergeFrom(const HALO_SteeringWheel_Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.alive_counter() != 0) {
    set_alive_counter(from.alive_counter());
  }
}

void HALO_SteeringWheel_Status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HALO_SteeringWheel_Status::CopyFrom(const HALO_SteeringWheel_Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HALO_SteeringWheel_Status::IsInitialized() const {
  return true;
}

void HALO_SteeringWheel_Status::Swap(HALO_SteeringWheel_Status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HALO_SteeringWheel_Status::InternalSwap(HALO_SteeringWheel_Status* other) {
  using std::swap;
  swap(alive_counter_, other->alive_counter_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HALO_SteeringWheel_Status::GetMetadata() const {
  protobuf_IAA_5fHaloSteeringWheel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IAA_5fHaloSteeringWheel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HALO_SteeringWheelCommand::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HALO_SteeringWheelCommand::kCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HALO_SteeringWheelCommand::HALO_SteeringWheelCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsHALO_SteeringWheelCommand();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand)
}
HALO_SteeringWheelCommand::HALO_SteeringWheelCommand(const HALO_SteeringWheelCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  command_ = from.command_;
  // @@protoc_insertion_point(copy_constructor:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand)
}

void HALO_SteeringWheelCommand::SharedCtor() {
  command_ = 0;
  _cached_size_ = 0;
}

HALO_SteeringWheelCommand::~HALO_SteeringWheelCommand() {
  // @@protoc_insertion_point(destructor:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand)
  SharedDtor();
}

void HALO_SteeringWheelCommand::SharedDtor() {
}

void HALO_SteeringWheelCommand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HALO_SteeringWheelCommand::descriptor() {
  ::protobuf_IAA_5fHaloSteeringWheel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IAA_5fHaloSteeringWheel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HALO_SteeringWheelCommand& HALO_SteeringWheelCommand::default_instance() {
  ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsHALO_SteeringWheelCommand();
  return *internal_default_instance();
}

HALO_SteeringWheelCommand* HALO_SteeringWheelCommand::New(::google::protobuf::Arena* arena) const {
  HALO_SteeringWheelCommand* n = new HALO_SteeringWheelCommand;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HALO_SteeringWheelCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_ = 0;
  _internal_metadata_.Clear();
}

bool HALO_SteeringWheelCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand.CommandList command = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_command(static_cast< ::IAA::Halo::SteeringWheel::HALO_SteeringWheelCommand_CommandList >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand)
  return false;
#undef DO_
}

void HALO_SteeringWheelCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand.CommandList command = 1;
  if (this->command() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->command(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand)
}

::google::protobuf::uint8* HALO_SteeringWheelCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand.CommandList command = 1;
  if (this->command() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->command(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand)
  return target;
}

size_t HALO_SteeringWheelCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand.CommandList command = 1;
  if (this->command() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HALO_SteeringWheelCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const HALO_SteeringWheelCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HALO_SteeringWheelCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand)
    MergeFrom(*source);
  }
}

void HALO_SteeringWheelCommand::MergeFrom(const HALO_SteeringWheelCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command() != 0) {
    set_command(from.command());
  }
}

void HALO_SteeringWheelCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HALO_SteeringWheelCommand::CopyFrom(const HALO_SteeringWheelCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HALO_SteeringWheelCommand::IsInitialized() const {
  return true;
}

void HALO_SteeringWheelCommand::Swap(HALO_SteeringWheelCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HALO_SteeringWheelCommand::InternalSwap(HALO_SteeringWheelCommand* other) {
  using std::swap;
  swap(command_, other->command_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HALO_SteeringWheelCommand::GetMetadata() const {
  protobuf_IAA_5fHaloSteeringWheel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IAA_5fHaloSteeringWheel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace SteeringWheel
}  // namespace Halo
}  // namespace IAA

// @@protoc_insertion_point(global_scope)
