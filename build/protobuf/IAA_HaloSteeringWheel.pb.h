// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IAA_HaloSteeringWheel.proto

#ifndef PROTOBUF_IAA_5fHaloSteeringWheel_2eproto__INCLUDED
#define PROTOBUF_IAA_5fHaloSteeringWheel_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_IAA_5fHaloSteeringWheel_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsClear_StripImpl();
void InitDefaultsClear_Strip();
void InitDefaultsSetColor_StripImpl();
void InitDefaultsSetColor_Strip();
void InitDefaultsSetLength_StripImpl();
void InitDefaultsSetLength_Strip();
void InitDefaultsCmd_FadeInImpl();
void InitDefaultsCmd_FadeIn();
void InitDefaultsCmd_FadeOutImpl();
void InitDefaultsCmd_FadeOut();
void InitDefaultsHALO_SteeringWheel_StatusImpl();
void InitDefaultsHALO_SteeringWheel_Status();
void InitDefaultsHALO_SteeringWheelCommandImpl();
void InitDefaultsHALO_SteeringWheelCommand();
inline void InitDefaults() {
  InitDefaultsClear_Strip();
  InitDefaultsSetColor_Strip();
  InitDefaultsSetLength_Strip();
  InitDefaultsCmd_FadeIn();
  InitDefaultsCmd_FadeOut();
  InitDefaultsHALO_SteeringWheel_Status();
  InitDefaultsHALO_SteeringWheelCommand();
}
}  // namespace protobuf_IAA_5fHaloSteeringWheel_2eproto
namespace IAA {
namespace Halo {
namespace SteeringWheel {
class Clear_Strip;
class Clear_StripDefaultTypeInternal;
extern Clear_StripDefaultTypeInternal _Clear_Strip_default_instance_;
class Cmd_FadeIn;
class Cmd_FadeInDefaultTypeInternal;
extern Cmd_FadeInDefaultTypeInternal _Cmd_FadeIn_default_instance_;
class Cmd_FadeOut;
class Cmd_FadeOutDefaultTypeInternal;
extern Cmd_FadeOutDefaultTypeInternal _Cmd_FadeOut_default_instance_;
class HALO_SteeringWheelCommand;
class HALO_SteeringWheelCommandDefaultTypeInternal;
extern HALO_SteeringWheelCommandDefaultTypeInternal _HALO_SteeringWheelCommand_default_instance_;
class HALO_SteeringWheel_Status;
class HALO_SteeringWheel_StatusDefaultTypeInternal;
extern HALO_SteeringWheel_StatusDefaultTypeInternal _HALO_SteeringWheel_Status_default_instance_;
class SetColor_Strip;
class SetColor_StripDefaultTypeInternal;
extern SetColor_StripDefaultTypeInternal _SetColor_Strip_default_instance_;
class SetLength_Strip;
class SetLength_StripDefaultTypeInternal;
extern SetLength_StripDefaultTypeInternal _SetLength_Strip_default_instance_;
}  // namespace SteeringWheel
}  // namespace Halo
}  // namespace IAA
namespace IAA {
namespace Halo {
namespace SteeringWheel {

enum HALO_SteeringWheelCommand_CommandList {
  HALO_SteeringWheelCommand_CommandList_NONE = 0,
  HALO_SteeringWheelCommand_CommandList_FADE_IN = 1,
  HALO_SteeringWheelCommand_CommandList_FADE_OUT = 2,
  HALO_SteeringWheelCommand_CommandList_IDLE_OFF = 3,
  HALO_SteeringWheelCommand_CommandList_HALO_SteeringWheelCommand_CommandList_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HALO_SteeringWheelCommand_CommandList_HALO_SteeringWheelCommand_CommandList_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HALO_SteeringWheelCommand_CommandList_IsValid(int value);
const HALO_SteeringWheelCommand_CommandList HALO_SteeringWheelCommand_CommandList_CommandList_MIN = HALO_SteeringWheelCommand_CommandList_NONE;
const HALO_SteeringWheelCommand_CommandList HALO_SteeringWheelCommand_CommandList_CommandList_MAX = HALO_SteeringWheelCommand_CommandList_IDLE_OFF;
const int HALO_SteeringWheelCommand_CommandList_CommandList_ARRAYSIZE = HALO_SteeringWheelCommand_CommandList_CommandList_MAX + 1;

const ::google::protobuf::EnumDescriptor* HALO_SteeringWheelCommand_CommandList_descriptor();
inline const ::std::string& HALO_SteeringWheelCommand_CommandList_Name(HALO_SteeringWheelCommand_CommandList value) {
  return ::google::protobuf::internal::NameOfEnum(
    HALO_SteeringWheelCommand_CommandList_descriptor(), value);
}
inline bool HALO_SteeringWheelCommand_CommandList_Parse(
    const ::std::string& name, HALO_SteeringWheelCommand_CommandList* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HALO_SteeringWheelCommand_CommandList>(
    HALO_SteeringWheelCommand_CommandList_descriptor(), name, value);
}
// ===================================================================

class Clear_Strip : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IAA.Halo.SteeringWheel.Clear_Strip) */ {
 public:
  Clear_Strip();
  virtual ~Clear_Strip();

  Clear_Strip(const Clear_Strip& from);

  inline Clear_Strip& operator=(const Clear_Strip& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Clear_Strip(Clear_Strip&& from) noexcept
    : Clear_Strip() {
    *this = ::std::move(from);
  }

  inline Clear_Strip& operator=(Clear_Strip&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Clear_Strip& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Clear_Strip* internal_default_instance() {
    return reinterpret_cast<const Clear_Strip*>(
               &_Clear_Strip_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Clear_Strip* other);
  friend void swap(Clear_Strip& a, Clear_Strip& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Clear_Strip* New() const PROTOBUF_FINAL { return New(NULL); }

  Clear_Strip* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Clear_Strip& from);
  void MergeFrom(const Clear_Strip& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Clear_Strip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool clr = 1;
  void clear_clr();
  static const int kClrFieldNumber = 1;
  bool clr() const;
  void set_clr(bool value);

  // @@protoc_insertion_point(class_scope:IAA.Halo.SteeringWheel.Clear_Strip)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool clr_;
  mutable int _cached_size_;
  friend struct ::protobuf_IAA_5fHaloSteeringWheel_2eproto::TableStruct;
  friend void ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsClear_StripImpl();
};
// -------------------------------------------------------------------

class SetColor_Strip : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IAA.Halo.SteeringWheel.SetColor_Strip) */ {
 public:
  SetColor_Strip();
  virtual ~SetColor_Strip();

  SetColor_Strip(const SetColor_Strip& from);

  inline SetColor_Strip& operator=(const SetColor_Strip& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetColor_Strip(SetColor_Strip&& from) noexcept
    : SetColor_Strip() {
    *this = ::std::move(from);
  }

  inline SetColor_Strip& operator=(SetColor_Strip&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetColor_Strip& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetColor_Strip* internal_default_instance() {
    return reinterpret_cast<const SetColor_Strip*>(
               &_SetColor_Strip_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SetColor_Strip* other);
  friend void swap(SetColor_Strip& a, SetColor_Strip& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetColor_Strip* New() const PROTOBUF_FINAL { return New(NULL); }

  SetColor_Strip* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetColor_Strip& from);
  void MergeFrom(const SetColor_Strip& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetColor_Strip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 red = 1;
  void clear_red();
  static const int kRedFieldNumber = 1;
  ::google::protobuf::uint32 red() const;
  void set_red(::google::protobuf::uint32 value);

  // uint32 green = 2;
  void clear_green();
  static const int kGreenFieldNumber = 2;
  ::google::protobuf::uint32 green() const;
  void set_green(::google::protobuf::uint32 value);

  // uint32 blue = 3;
  void clear_blue();
  static const int kBlueFieldNumber = 3;
  ::google::protobuf::uint32 blue() const;
  void set_blue(::google::protobuf::uint32 value);

  // uint32 globalbrightness = 4;
  void clear_globalbrightness();
  static const int kGlobalbrightnessFieldNumber = 4;
  ::google::protobuf::uint32 globalbrightness() const;
  void set_globalbrightness(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IAA.Halo.SteeringWheel.SetColor_Strip)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 red_;
  ::google::protobuf::uint32 green_;
  ::google::protobuf::uint32 blue_;
  ::google::protobuf::uint32 globalbrightness_;
  mutable int _cached_size_;
  friend struct ::protobuf_IAA_5fHaloSteeringWheel_2eproto::TableStruct;
  friend void ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsSetColor_StripImpl();
};
// -------------------------------------------------------------------

class SetLength_Strip : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IAA.Halo.SteeringWheel.SetLength_Strip) */ {
 public:
  SetLength_Strip();
  virtual ~SetLength_Strip();

  SetLength_Strip(const SetLength_Strip& from);

  inline SetLength_Strip& operator=(const SetLength_Strip& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetLength_Strip(SetLength_Strip&& from) noexcept
    : SetLength_Strip() {
    *this = ::std::move(from);
  }

  inline SetLength_Strip& operator=(SetLength_Strip&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetLength_Strip& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetLength_Strip* internal_default_instance() {
    return reinterpret_cast<const SetLength_Strip*>(
               &_SetLength_Strip_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SetLength_Strip* other);
  friend void swap(SetLength_Strip& a, SetLength_Strip& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetLength_Strip* New() const PROTOBUF_FINAL { return New(NULL); }

  SetLength_Strip* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetLength_Strip& from);
  void MergeFrom(const SetLength_Strip& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetLength_Strip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 lenght = 1;
  void clear_lenght();
  static const int kLenghtFieldNumber = 1;
  ::google::protobuf::uint32 lenght() const;
  void set_lenght(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IAA.Halo.SteeringWheel.SetLength_Strip)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 lenght_;
  mutable int _cached_size_;
  friend struct ::protobuf_IAA_5fHaloSteeringWheel_2eproto::TableStruct;
  friend void ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsSetLength_StripImpl();
};
// -------------------------------------------------------------------

class Cmd_FadeIn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IAA.Halo.SteeringWheel.Cmd_FadeIn) */ {
 public:
  Cmd_FadeIn();
  virtual ~Cmd_FadeIn();

  Cmd_FadeIn(const Cmd_FadeIn& from);

  inline Cmd_FadeIn& operator=(const Cmd_FadeIn& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Cmd_FadeIn(Cmd_FadeIn&& from) noexcept
    : Cmd_FadeIn() {
    *this = ::std::move(from);
  }

  inline Cmd_FadeIn& operator=(Cmd_FadeIn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_FadeIn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Cmd_FadeIn* internal_default_instance() {
    return reinterpret_cast<const Cmd_FadeIn*>(
               &_Cmd_FadeIn_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Cmd_FadeIn* other);
  friend void swap(Cmd_FadeIn& a, Cmd_FadeIn& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Cmd_FadeIn* New() const PROTOBUF_FINAL { return New(NULL); }

  Cmd_FadeIn* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Cmd_FadeIn& from);
  void MergeFrom(const Cmd_FadeIn& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Cmd_FadeIn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 red = 1;
  void clear_red();
  static const int kRedFieldNumber = 1;
  ::google::protobuf::uint32 red() const;
  void set_red(::google::protobuf::uint32 value);

  // uint32 green = 2;
  void clear_green();
  static const int kGreenFieldNumber = 2;
  ::google::protobuf::uint32 green() const;
  void set_green(::google::protobuf::uint32 value);

  // uint32 blue = 3;
  void clear_blue();
  static const int kBlueFieldNumber = 3;
  ::google::protobuf::uint32 blue() const;
  void set_blue(::google::protobuf::uint32 value);

  // uint32 brightness = 4;
  void clear_brightness();
  static const int kBrightnessFieldNumber = 4;
  ::google::protobuf::uint32 brightness() const;
  void set_brightness(::google::protobuf::uint32 value);

  // uint32 delay = 5;
  void clear_delay();
  static const int kDelayFieldNumber = 5;
  ::google::protobuf::uint32 delay() const;
  void set_delay(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IAA.Halo.SteeringWheel.Cmd_FadeIn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 red_;
  ::google::protobuf::uint32 green_;
  ::google::protobuf::uint32 blue_;
  ::google::protobuf::uint32 brightness_;
  ::google::protobuf::uint32 delay_;
  mutable int _cached_size_;
  friend struct ::protobuf_IAA_5fHaloSteeringWheel_2eproto::TableStruct;
  friend void ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsCmd_FadeInImpl();
};
// -------------------------------------------------------------------

class Cmd_FadeOut : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IAA.Halo.SteeringWheel.Cmd_FadeOut) */ {
 public:
  Cmd_FadeOut();
  virtual ~Cmd_FadeOut();

  Cmd_FadeOut(const Cmd_FadeOut& from);

  inline Cmd_FadeOut& operator=(const Cmd_FadeOut& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Cmd_FadeOut(Cmd_FadeOut&& from) noexcept
    : Cmd_FadeOut() {
    *this = ::std::move(from);
  }

  inline Cmd_FadeOut& operator=(Cmd_FadeOut&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_FadeOut& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Cmd_FadeOut* internal_default_instance() {
    return reinterpret_cast<const Cmd_FadeOut*>(
               &_Cmd_FadeOut_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Cmd_FadeOut* other);
  friend void swap(Cmd_FadeOut& a, Cmd_FadeOut& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Cmd_FadeOut* New() const PROTOBUF_FINAL { return New(NULL); }

  Cmd_FadeOut* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Cmd_FadeOut& from);
  void MergeFrom(const Cmd_FadeOut& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Cmd_FadeOut* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 red = 1;
  void clear_red();
  static const int kRedFieldNumber = 1;
  ::google::protobuf::uint32 red() const;
  void set_red(::google::protobuf::uint32 value);

  // uint32 green = 2;
  void clear_green();
  static const int kGreenFieldNumber = 2;
  ::google::protobuf::uint32 green() const;
  void set_green(::google::protobuf::uint32 value);

  // uint32 blue = 3;
  void clear_blue();
  static const int kBlueFieldNumber = 3;
  ::google::protobuf::uint32 blue() const;
  void set_blue(::google::protobuf::uint32 value);

  // uint32 delay = 4;
  void clear_delay();
  static const int kDelayFieldNumber = 4;
  ::google::protobuf::uint32 delay() const;
  void set_delay(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IAA.Halo.SteeringWheel.Cmd_FadeOut)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 red_;
  ::google::protobuf::uint32 green_;
  ::google::protobuf::uint32 blue_;
  ::google::protobuf::uint32 delay_;
  mutable int _cached_size_;
  friend struct ::protobuf_IAA_5fHaloSteeringWheel_2eproto::TableStruct;
  friend void ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsCmd_FadeOutImpl();
};
// -------------------------------------------------------------------

class HALO_SteeringWheel_Status : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status) */ {
 public:
  HALO_SteeringWheel_Status();
  virtual ~HALO_SteeringWheel_Status();

  HALO_SteeringWheel_Status(const HALO_SteeringWheel_Status& from);

  inline HALO_SteeringWheel_Status& operator=(const HALO_SteeringWheel_Status& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HALO_SteeringWheel_Status(HALO_SteeringWheel_Status&& from) noexcept
    : HALO_SteeringWheel_Status() {
    *this = ::std::move(from);
  }

  inline HALO_SteeringWheel_Status& operator=(HALO_SteeringWheel_Status&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HALO_SteeringWheel_Status& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HALO_SteeringWheel_Status* internal_default_instance() {
    return reinterpret_cast<const HALO_SteeringWheel_Status*>(
               &_HALO_SteeringWheel_Status_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(HALO_SteeringWheel_Status* other);
  friend void swap(HALO_SteeringWheel_Status& a, HALO_SteeringWheel_Status& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HALO_SteeringWheel_Status* New() const PROTOBUF_FINAL { return New(NULL); }

  HALO_SteeringWheel_Status* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HALO_SteeringWheel_Status& from);
  void MergeFrom(const HALO_SteeringWheel_Status& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HALO_SteeringWheel_Status* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 alive_counter = 1;
  void clear_alive_counter();
  static const int kAliveCounterFieldNumber = 1;
  ::google::protobuf::uint32 alive_counter() const;
  void set_alive_counter(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 alive_counter_;
  mutable int _cached_size_;
  friend struct ::protobuf_IAA_5fHaloSteeringWheel_2eproto::TableStruct;
  friend void ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsHALO_SteeringWheel_StatusImpl();
};
// -------------------------------------------------------------------

class HALO_SteeringWheelCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand) */ {
 public:
  HALO_SteeringWheelCommand();
  virtual ~HALO_SteeringWheelCommand();

  HALO_SteeringWheelCommand(const HALO_SteeringWheelCommand& from);

  inline HALO_SteeringWheelCommand& operator=(const HALO_SteeringWheelCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HALO_SteeringWheelCommand(HALO_SteeringWheelCommand&& from) noexcept
    : HALO_SteeringWheelCommand() {
    *this = ::std::move(from);
  }

  inline HALO_SteeringWheelCommand& operator=(HALO_SteeringWheelCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HALO_SteeringWheelCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HALO_SteeringWheelCommand* internal_default_instance() {
    return reinterpret_cast<const HALO_SteeringWheelCommand*>(
               &_HALO_SteeringWheelCommand_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(HALO_SteeringWheelCommand* other);
  friend void swap(HALO_SteeringWheelCommand& a, HALO_SteeringWheelCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HALO_SteeringWheelCommand* New() const PROTOBUF_FINAL { return New(NULL); }

  HALO_SteeringWheelCommand* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HALO_SteeringWheelCommand& from);
  void MergeFrom(const HALO_SteeringWheelCommand& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HALO_SteeringWheelCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef HALO_SteeringWheelCommand_CommandList CommandList;
  static const CommandList NONE =
    HALO_SteeringWheelCommand_CommandList_NONE;
  static const CommandList FADE_IN =
    HALO_SteeringWheelCommand_CommandList_FADE_IN;
  static const CommandList FADE_OUT =
    HALO_SteeringWheelCommand_CommandList_FADE_OUT;
  static const CommandList IDLE_OFF =
    HALO_SteeringWheelCommand_CommandList_IDLE_OFF;
  static inline bool CommandList_IsValid(int value) {
    return HALO_SteeringWheelCommand_CommandList_IsValid(value);
  }
  static const CommandList CommandList_MIN =
    HALO_SteeringWheelCommand_CommandList_CommandList_MIN;
  static const CommandList CommandList_MAX =
    HALO_SteeringWheelCommand_CommandList_CommandList_MAX;
  static const int CommandList_ARRAYSIZE =
    HALO_SteeringWheelCommand_CommandList_CommandList_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CommandList_descriptor() {
    return HALO_SteeringWheelCommand_CommandList_descriptor();
  }
  static inline const ::std::string& CommandList_Name(CommandList value) {
    return HALO_SteeringWheelCommand_CommandList_Name(value);
  }
  static inline bool CommandList_Parse(const ::std::string& name,
      CommandList* value) {
    return HALO_SteeringWheelCommand_CommandList_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand.CommandList command = 1;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  ::IAA::Halo::SteeringWheel::HALO_SteeringWheelCommand_CommandList command() const;
  void set_command(::IAA::Halo::SteeringWheel::HALO_SteeringWheelCommand_CommandList value);

  // @@protoc_insertion_point(class_scope:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int command_;
  mutable int _cached_size_;
  friend struct ::protobuf_IAA_5fHaloSteeringWheel_2eproto::TableStruct;
  friend void ::protobuf_IAA_5fHaloSteeringWheel_2eproto::InitDefaultsHALO_SteeringWheelCommandImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Clear_Strip

// bool clr = 1;
inline void Clear_Strip::clear_clr() {
  clr_ = false;
}
inline bool Clear_Strip::clr() const {
  // @@protoc_insertion_point(field_get:IAA.Halo.SteeringWheel.Clear_Strip.clr)
  return clr_;
}
inline void Clear_Strip::set_clr(bool value) {
  
  clr_ = value;
  // @@protoc_insertion_point(field_set:IAA.Halo.SteeringWheel.Clear_Strip.clr)
}

// -------------------------------------------------------------------

// SetColor_Strip

// uint32 red = 1;
inline void SetColor_Strip::clear_red() {
  red_ = 0u;
}
inline ::google::protobuf::uint32 SetColor_Strip::red() const {
  // @@protoc_insertion_point(field_get:IAA.Halo.SteeringWheel.SetColor_Strip.red)
  return red_;
}
inline void SetColor_Strip::set_red(::google::protobuf::uint32 value) {
  
  red_ = value;
  // @@protoc_insertion_point(field_set:IAA.Halo.SteeringWheel.SetColor_Strip.red)
}

// uint32 green = 2;
inline void SetColor_Strip::clear_green() {
  green_ = 0u;
}
inline ::google::protobuf::uint32 SetColor_Strip::green() const {
  // @@protoc_insertion_point(field_get:IAA.Halo.SteeringWheel.SetColor_Strip.green)
  return green_;
}
inline void SetColor_Strip::set_green(::google::protobuf::uint32 value) {
  
  green_ = value;
  // @@protoc_insertion_point(field_set:IAA.Halo.SteeringWheel.SetColor_Strip.green)
}

// uint32 blue = 3;
inline void SetColor_Strip::clear_blue() {
  blue_ = 0u;
}
inline ::google::protobuf::uint32 SetColor_Strip::blue() const {
  // @@protoc_insertion_point(field_get:IAA.Halo.SteeringWheel.SetColor_Strip.blue)
  return blue_;
}
inline void SetColor_Strip::set_blue(::google::protobuf::uint32 value) {
  
  blue_ = value;
  // @@protoc_insertion_point(field_set:IAA.Halo.SteeringWheel.SetColor_Strip.blue)
}

// uint32 globalbrightness = 4;
inline void SetColor_Strip::clear_globalbrightness() {
  globalbrightness_ = 0u;
}
inline ::google::protobuf::uint32 SetColor_Strip::globalbrightness() const {
  // @@protoc_insertion_point(field_get:IAA.Halo.SteeringWheel.SetColor_Strip.globalbrightness)
  return globalbrightness_;
}
inline void SetColor_Strip::set_globalbrightness(::google::protobuf::uint32 value) {
  
  globalbrightness_ = value;
  // @@protoc_insertion_point(field_set:IAA.Halo.SteeringWheel.SetColor_Strip.globalbrightness)
}

// -------------------------------------------------------------------

// SetLength_Strip

// uint32 lenght = 1;
inline void SetLength_Strip::clear_lenght() {
  lenght_ = 0u;
}
inline ::google::protobuf::uint32 SetLength_Strip::lenght() const {
  // @@protoc_insertion_point(field_get:IAA.Halo.SteeringWheel.SetLength_Strip.lenght)
  return lenght_;
}
inline void SetLength_Strip::set_lenght(::google::protobuf::uint32 value) {
  
  lenght_ = value;
  // @@protoc_insertion_point(field_set:IAA.Halo.SteeringWheel.SetLength_Strip.lenght)
}

// -------------------------------------------------------------------

// Cmd_FadeIn

// uint32 red = 1;
inline void Cmd_FadeIn::clear_red() {
  red_ = 0u;
}
inline ::google::protobuf::uint32 Cmd_FadeIn::red() const {
  // @@protoc_insertion_point(field_get:IAA.Halo.SteeringWheel.Cmd_FadeIn.red)
  return red_;
}
inline void Cmd_FadeIn::set_red(::google::protobuf::uint32 value) {
  
  red_ = value;
  // @@protoc_insertion_point(field_set:IAA.Halo.SteeringWheel.Cmd_FadeIn.red)
}

// uint32 green = 2;
inline void Cmd_FadeIn::clear_green() {
  green_ = 0u;
}
inline ::google::protobuf::uint32 Cmd_FadeIn::green() const {
  // @@protoc_insertion_point(field_get:IAA.Halo.SteeringWheel.Cmd_FadeIn.green)
  return green_;
}
inline void Cmd_FadeIn::set_green(::google::protobuf::uint32 value) {
  
  green_ = value;
  // @@protoc_insertion_point(field_set:IAA.Halo.SteeringWheel.Cmd_FadeIn.green)
}

// uint32 blue = 3;
inline void Cmd_FadeIn::clear_blue() {
  blue_ = 0u;
}
inline ::google::protobuf::uint32 Cmd_FadeIn::blue() const {
  // @@protoc_insertion_point(field_get:IAA.Halo.SteeringWheel.Cmd_FadeIn.blue)
  return blue_;
}
inline void Cmd_FadeIn::set_blue(::google::protobuf::uint32 value) {
  
  blue_ = value;
  // @@protoc_insertion_point(field_set:IAA.Halo.SteeringWheel.Cmd_FadeIn.blue)
}

// uint32 brightness = 4;
inline void Cmd_FadeIn::clear_brightness() {
  brightness_ = 0u;
}
inline ::google::protobuf::uint32 Cmd_FadeIn::brightness() const {
  // @@protoc_insertion_point(field_get:IAA.Halo.SteeringWheel.Cmd_FadeIn.brightness)
  return brightness_;
}
inline void Cmd_FadeIn::set_brightness(::google::protobuf::uint32 value) {
  
  brightness_ = value;
  // @@protoc_insertion_point(field_set:IAA.Halo.SteeringWheel.Cmd_FadeIn.brightness)
}

// uint32 delay = 5;
inline void Cmd_FadeIn::clear_delay() {
  delay_ = 0u;
}
inline ::google::protobuf::uint32 Cmd_FadeIn::delay() const {
  // @@protoc_insertion_point(field_get:IAA.Halo.SteeringWheel.Cmd_FadeIn.delay)
  return delay_;
}
inline void Cmd_FadeIn::set_delay(::google::protobuf::uint32 value) {
  
  delay_ = value;
  // @@protoc_insertion_point(field_set:IAA.Halo.SteeringWheel.Cmd_FadeIn.delay)
}

// -------------------------------------------------------------------

// Cmd_FadeOut

// uint32 red = 1;
inline void Cmd_FadeOut::clear_red() {
  red_ = 0u;
}
inline ::google::protobuf::uint32 Cmd_FadeOut::red() const {
  // @@protoc_insertion_point(field_get:IAA.Halo.SteeringWheel.Cmd_FadeOut.red)
  return red_;
}
inline void Cmd_FadeOut::set_red(::google::protobuf::uint32 value) {
  
  red_ = value;
  // @@protoc_insertion_point(field_set:IAA.Halo.SteeringWheel.Cmd_FadeOut.red)
}

// uint32 green = 2;
inline void Cmd_FadeOut::clear_green() {
  green_ = 0u;
}
inline ::google::protobuf::uint32 Cmd_FadeOut::green() const {
  // @@protoc_insertion_point(field_get:IAA.Halo.SteeringWheel.Cmd_FadeOut.green)
  return green_;
}
inline void Cmd_FadeOut::set_green(::google::protobuf::uint32 value) {
  
  green_ = value;
  // @@protoc_insertion_point(field_set:IAA.Halo.SteeringWheel.Cmd_FadeOut.green)
}

// uint32 blue = 3;
inline void Cmd_FadeOut::clear_blue() {
  blue_ = 0u;
}
inline ::google::protobuf::uint32 Cmd_FadeOut::blue() const {
  // @@protoc_insertion_point(field_get:IAA.Halo.SteeringWheel.Cmd_FadeOut.blue)
  return blue_;
}
inline void Cmd_FadeOut::set_blue(::google::protobuf::uint32 value) {
  
  blue_ = value;
  // @@protoc_insertion_point(field_set:IAA.Halo.SteeringWheel.Cmd_FadeOut.blue)
}

// uint32 delay = 4;
inline void Cmd_FadeOut::clear_delay() {
  delay_ = 0u;
}
inline ::google::protobuf::uint32 Cmd_FadeOut::delay() const {
  // @@protoc_insertion_point(field_get:IAA.Halo.SteeringWheel.Cmd_FadeOut.delay)
  return delay_;
}
inline void Cmd_FadeOut::set_delay(::google::protobuf::uint32 value) {
  
  delay_ = value;
  // @@protoc_insertion_point(field_set:IAA.Halo.SteeringWheel.Cmd_FadeOut.delay)
}

// -------------------------------------------------------------------

// HALO_SteeringWheel_Status

// uint32 alive_counter = 1;
inline void HALO_SteeringWheel_Status::clear_alive_counter() {
  alive_counter_ = 0u;
}
inline ::google::protobuf::uint32 HALO_SteeringWheel_Status::alive_counter() const {
  // @@protoc_insertion_point(field_get:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status.alive_counter)
  return alive_counter_;
}
inline void HALO_SteeringWheel_Status::set_alive_counter(::google::protobuf::uint32 value) {
  
  alive_counter_ = value;
  // @@protoc_insertion_point(field_set:IAA.Halo.SteeringWheel.HALO_SteeringWheel_Status.alive_counter)
}

// -------------------------------------------------------------------

// HALO_SteeringWheelCommand

// .IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand.CommandList command = 1;
inline void HALO_SteeringWheelCommand::clear_command() {
  command_ = 0;
}
inline ::IAA::Halo::SteeringWheel::HALO_SteeringWheelCommand_CommandList HALO_SteeringWheelCommand::command() const {
  // @@protoc_insertion_point(field_get:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand.command)
  return static_cast< ::IAA::Halo::SteeringWheel::HALO_SteeringWheelCommand_CommandList >(command_);
}
inline void HALO_SteeringWheelCommand::set_command(::IAA::Halo::SteeringWheel::HALO_SteeringWheelCommand_CommandList value) {
  
  command_ = value;
  // @@protoc_insertion_point(field_set:IAA.Halo.SteeringWheel.HALO_SteeringWheelCommand.command)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace SteeringWheel
}  // namespace Halo
}  // namespace IAA

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::IAA::Halo::SteeringWheel::HALO_SteeringWheelCommand_CommandList> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::IAA::Halo::SteeringWheel::HALO_SteeringWheelCommand_CommandList>() {
  return ::IAA::Halo::SteeringWheel::HALO_SteeringWheelCommand_CommandList_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_IAA_5fHaloSteeringWheel_2eproto__INCLUDED
